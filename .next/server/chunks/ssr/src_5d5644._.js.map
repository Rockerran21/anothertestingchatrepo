{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/lib/msal/authConfig.ts"],"sourcesContent":["// // authConfig.ts\n// import { Configuration, PopupRequest } from \"@azure/msal-browser\";\n\n// export const msalConfig: Configuration = {\n//   auth: {\n//     clientId: \"24d6be53-17c0-483a-a247-d57b20dae072\", // Replace with your client ID\n//     authority:\n//       \"https://login.microsoftonline.com/f41744ba-a8eb-4eff-bd47-a211592ebb0f\", // Replace with your tenant ID\n//     redirectUri: \"http://localhost:3000\", // Replace with your redirect URI\n//   },\n//   cache: {\n//     cacheLocation: \"localStorage\", // This configures where your cache will be stored\n//     storeAuthStateInCookie: false, // Set to true if you are having issues on IE11 or Edge\n//   },\n// };\n\n// export const loginRequest: PopupRequest = {\n//   scopes: [\"User.Read\"],\n// };\n\nconst CLIENT_ID = \"d67fb9c3-fff7-4ca1-aadc-614d9fe1e933\";\nexport const API_SCOPE = \"api://\" + CLIENT_ID + \"/YourAppName\";\n\nexport const msalConfig = {\n  auth: {\n    clientId: CLIENT_ID,\n    authority:\n      \"https://login.microsoftonline.com/f41744ba-a8eb-4eff-bd47-a211592ebb0f\",\n    redirectUri: \"http://localhost:3000/\",\n    postLogoutRedirectUri: \"http://localhost:3000/login\",\n    scope: API_SCOPE,\n    domain: \"http://localhost:3000/\",\n  },\n  cache: {\n    // Optional\n    cacheLocation: \"localStorage\", // Configures cache location. \"sessionStorage\" is more secure, but \"localStorage\" gives you SSO between tabs.\n    storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\n  },\n};\n\nexport const loginRequest = {\n  // scopes: [\"user.read\"],\n  scopes: [\"user.read\", \"profile\", \"openid\"],\n};\n\nexport const userDataLoginRequest = {\n  scopes: [\"user.read\"],\n};\n\nexport const graphConfig = {\n  graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\",\n};\n"],"names":[],"mappings":"AAAA,mBAAmB;AACnB,qEAAqE;AAErE,6CAA6C;AAC7C,YAAY;AACZ,uFAAuF;AACvF,iBAAiB;AACjB,iHAAiH;AACjH,8EAA8E;AAC9E,OAAO;AACP,aAAa;AACb,wFAAwF;AACxF,6FAA6F;AAC7F,OAAO;AACP,KAAK;AAEL,8CAA8C;AAC9C,2BAA2B;AAC3B,KAAK;;;;;;;;AAEL,MAAM,YAAY;AACX,MAAM,YAAY,WAAW,YAAY;AAEzC,MAAM,aAAa;IACxB,MAAM;QACJ,UAAU;QACV,WACE;QACF,aAAa;QACb,uBAAuB;QACvB,OAAO;QACP,QAAQ;IACV;IACA,OAAO;QACL,WAAW;QACX,eAAe;QACf,wBAAwB;IAC1B;AACF;AAEO,MAAM,eAAe;IAC1B,yBAAyB;IACzB,QAAQ;QAAC;QAAa;QAAW;KAAS;AAC5C;AAEO,MAAM,uBAAuB;IAClC,QAAQ;QAAC;KAAY;AACvB;AAEO,MAAM,cAAc;IACzB,iBAAiB;AACnB"}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/lib/msal/msal.ts"],"sourcesContent":["import {\n  EventType,\n  AuthenticationResult,\n  PublicClientApplication,\n} from \"@azure/msal-browser\";\n\nimport { msalConfig, loginRequest } from \"./authConfig\";\n\nexport const msalInstance = new PublicClientApplication(msalConfig);\n\nexport function initializeMsal() {\n  const accounts = msalInstance.getAllAccounts();\n  if (accounts.length > 0) {\n    msalInstance.setActiveAccount(accounts[0]);\n  }\n\n  msalInstance.addEventCallback(async (event) => {\n    if (event.eventType === EventType.LOGIN_SUCCESS && event.payload) {\n      const payload = event.payload as AuthenticationResult;\n      const account = payload.account;\n      msalInstance.setActiveAccount(account);\n    }\n  });\n}\n\nexport const handleLogin = async (\n  loginType: \"popup\" | \"redirect\" = \"redirect\",\n) => {\n  try {\n    let response;\n    if (loginType === \"popup\") {\n      response = await msalInstance.loginPopup(loginRequest);\n    } else if (loginType === \"redirect\") {\n      response = await msalInstance.loginRedirect(loginRequest);\n    }\n    if (response && response.account) {\n      return response;\n    }\n  } catch (error) {\n    console.error(`Login failed: ${error}`);\n    return error;\n  }\n};\n\nexport const handleLogout = async (\n  logoutType: \"popup\" | \"redirect\" = \"redirect\",\n) => {\n  try {\n    if (logoutType === \"popup\") {\n      await msalInstance.logoutPopup();\n    } else if (logoutType === \"redirect\") {\n      const logoutRequest = {\n        account: msalInstance.getActiveAccount(),\n        postLogoutRedirectUri: \"/login\",\n      };\n      await msalInstance.logoutRedirect(logoutRequest);\n    }\n  } catch (error) {\n    console.error(`Logout failed: ${error}`);\n  }\n};\n"],"names":[],"mappings":";;;;;;;;;;;;AAQO,MAAM,eAAe,IAAI,qLAAA,CAAA,0BAAuB,CAAC,gIAAA,CAAA,aAAU;AAE3D,SAAS;IACd,MAAM,WAAW,aAAa,cAAc;IAC5C,IAAI,SAAS,MAAM,GAAG,GAAG;QACvB,aAAa,gBAAgB,CAAC,QAAQ,CAAC,EAAE;IAC3C;IAEA,aAAa,gBAAgB,CAAC,OAAO;QACnC,IAAI,MAAM,SAAS,KAAK,yKAAA,CAAA,YAAS,CAAC,aAAa,IAAI,MAAM,OAAO,EAAE;YAChE,MAAM,UAAU,MAAM,OAAO;YAC7B,MAAM,UAAU,QAAQ,OAAO;YAC/B,aAAa,gBAAgB,CAAC;QAChC;IACF;AACF;AAEO,MAAM,cAAc,OACzB,YAAkC,UAAU;IAE5C,IAAI;QACF,IAAI;QACJ,IAAI,cAAc,SAAS;YACzB,WAAW,MAAM,aAAa,UAAU,CAAC,gIAAA,CAAA,eAAY;QACvD,OAAO,IAAI,cAAc,YAAY;YACnC,WAAW,MAAM,aAAa,aAAa,CAAC,gIAAA,CAAA,eAAY;QAC1D;QACA,IAAI,YAAY,SAAS,OAAO,EAAE;YAChC,OAAO;QACT;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,cAAc,EAAE,MAAM,CAAC;QACtC,OAAO;IACT;AACF;AAEO,MAAM,eAAe,OAC1B,aAAmC,UAAU;IAE7C,IAAI;QACF,IAAI,eAAe,SAAS;YAC1B,MAAM,aAAa,WAAW;QAChC,OAAO,IAAI,eAAe,YAAY;YACpC,MAAM,gBAAgB;gBACpB,SAAS,aAAa,gBAAgB;gBACtC,uBAAuB;YACzB;YACA,MAAM,aAAa,cAAc,CAAC;QACpC;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,eAAe,EAAE,MAAM,CAAC;IACzC;AACF"}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/lib/msal/MyMsalProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport {\n  MsalProvider,\n  AuthenticatedTemplate,\n  UnauthenticatedTemplate,\n} from \"@azure/msal-react\";\nimport { initializeMsal, msalInstance } from \"./msal\";\n\nexport default function MyMsalProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const router = useRouter();\n\n  useEffect(() => {\n    initializeMsal();\n  }, []);\n\n  useEffect(() => {\n    const checkAccount = async () => {\n      const account = msalInstance.getActiveAccount();\n      if (!account) {\n        router.push(\"/login\");\n      }\n    };\n    checkAccount();\n  }, [router]);\n\n  return (\n    <MsalProvider instance={msalInstance}>\n      <AuthenticatedTemplate>{children}</AuthenticatedTemplate>\n      <UnauthenticatedTemplate>{children}</UnauthenticatedTemplate>\n    </MsalProvider>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;;;;;AAWe,SAAS,eAAe,EACrC,QAAQ,EAGT;IACC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,+MAAA,CAAA,YAAS,AAAD,EAAE;QACR,CAAA,GAAA,0HAAA,CAAA,iBAAc,AAAD;IACf,GAAG,EAAE;IAEL,CAAA,GAAA,+MAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,eAAe;YACnB,MAAM,UAAU,0HAAA,CAAA,eAAY,CAAC,gBAAgB;YAC7C,IAAI,CAAC,SAAS;gBACZ,OAAO,IAAI,CAAC;YACd;QACF;QACA;IACF,GAAG;QAAC;KAAO;IAEX,qBACE,wPAAC,gKAAA,CAAA,eAAY;QAAC,UAAU,0HAAA,CAAA,eAAY;;0BAClC,wPAAC,uLAAA,CAAA,wBAAqB;0BAAE;;;;;;0BACxB,wPAAC,yLAAA,CAAA,0BAAuB;0BAAE;;;;;;;;;;;;AAGhC"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\nimport { format, isToday, isYesterday, parseISO } from \"date-fns\";\n\ntype Item = {\n  id: string;\n  name: string;\n  updated_at: string; // ISO date string\n};\n\ntype Folder = {\n  id: string;\n  name: string;\n  items: Item[];\n};\n\ntype GroupedItems = {\n  [key: string]: Item[];\n};\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport const groupItemsByDate = (items: Item[]): GroupedItems => {\n  const groups = items.reduce((acc: GroupedItems, item: Item) => {\n    const date = parseISO(item.updated_at);\n    let groupKey: string;\n\n    if (isToday(date)) {\n      groupKey = \"Today\";\n    } else if (isYesterday(date)) {\n      groupKey = \"Yesterday\";\n    } else {\n      groupKey = format(date, \"yyyy-MM-dd\");\n    }\n\n    if (!acc[groupKey]) {\n      acc[groupKey] = [];\n    }\n    acc[groupKey].push(item);\n    return acc;\n  }, {});\n\n  return groups;\n};\n\n// context presists\nconst PERSISTENCE_KEY = \"chatbotUIState\";\ninterface PersistableState {\n  [key: string]: any;\n}\n\nexport const saveState = (\n  state: any,\n  whitelist: string[],\n  blacklist: string[],\n) => {\n  const stateToPersist = Object.keys(state)\n    .filter((key) => whitelist.includes(key) && !blacklist.includes(key))\n    .reduce((acc, key) => ({ ...acc, [key]: state[key] }), {});\n  localStorage.setItem(PERSISTENCE_KEY, JSON.stringify(stateToPersist));\n};\n\nexport const loadState = (): PersistableState | null => {\n  const savedState = localStorage.getItem(PERSISTENCE_KEY);\n  return savedState ? JSON.parse(savedState) : null;\n};\n\nexport const generateUniqueId = () => {\n  return Date.now().toString(36) + Math.random().toString(36).substr(2, 9);\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAoBO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEO,MAAM,mBAAmB,CAAC;IAC/B,MAAM,SAAS,MAAM,MAAM,CAAC,CAAC,KAAmB;QAC9C,MAAM,OAAO,CAAA,GAAA,wIAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,UAAU;QACrC,IAAI;QAEJ,IAAI,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,OAAO;YACjB,WAAW;QACb,OAAO,IAAI,CAAA,GAAA,2IAAA,CAAA,cAAW,AAAD,EAAE,OAAO;YAC5B,WAAW;QACb,OAAO;YACL,WAAW,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,MAAM;QAC1B;QAEA,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE;YAClB,GAAG,CAAC,SAAS,GAAG,EAAE;QACpB;QACA,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC;QACnB,OAAO;IACT,GAAG,CAAC;IAEJ,OAAO;AACT;AAEA,mBAAmB;AACnB,MAAM,kBAAkB;AAKjB,MAAM,YAAY,CACvB,OACA,WACA;IAEA,MAAM,iBAAiB,OAAO,IAAI,CAAC,OAChC,MAAM,CAAC,CAAC,MAAQ,UAAU,QAAQ,CAAC,QAAQ,CAAC,UAAU,QAAQ,CAAC,MAC/D,MAAM,CAAC,CAAC,KAAK,MAAQ,CAAC;YAAE,GAAG,GAAG;YAAE,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI;QAAC,CAAC,GAAG,CAAC;IAC1D,aAAa,OAAO,CAAC,iBAAiB,KAAK,SAAS,CAAC;AACvD;AAEO,MAAM,YAAY;IACvB,MAAM,aAAa,aAAa,OAAO,CAAC;IACxC,OAAO,aAAa,KAAK,KAAK,CAAC,cAAc;AAC/C;AAEO,MAAM,mBAAmB;IAC9B,OAAO,KAAK,GAAG,GAAG,QAAQ,CAAC,MAAM,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,GAAG;AACxE"}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst TooltipProvider = TooltipPrimitive.Provider;\n\nconst Tooltip = TooltipPrimitive.Root;\n\nconst TooltipTrigger = TooltipPrimitive.Trigger;\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"bg-popover text-popover-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 overflow-hidden rounded-md border px-3 py-1.5 text-sm shadow-md\",\n      className,\n    )}\n    {...props}\n  >\n    {props.children}\n    <TooltipPrimitive.Arrow className=\"fill-current text-popover\" />\n  </TooltipPrimitive.Content>\n));\nTooltipContent.displayName = TooltipPrimitive.Content.displayName;\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider };\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;AAOA,MAAM,kBAAkB,oKAAiB,QAAQ;AAEjD,MAAM,UAAU,oKAAiB,IAAI;AAErC,MAAM,iBAAiB,oKAAiB,OAAO;AAE/C,MAAM,+BAAiB,gNAAM,UAAU,CAGrC,CAAC,EAAE,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC1C,wPAAC,oKAAiB,OAAO;QACvB,KAAK;QACL,YAAY;QACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sYACA;QAED,GAAG,KAAK;;YAER,MAAM,QAAQ;0BACf,wPAAC,oKAAiB,KAAK;gBAAC,WAAU;;;;;;;;;;;;AAGtC,eAAe,WAAW,GAAG,oKAAiB,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 298, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/utility/providers.tsx"],"sourcesContent":["\"use client\";\n\nimport { FC } from \"react\";\nimport { ThemeProvider as NextThemesProvider } from \"next-themes\";\nimport { ThemeProviderProps } from \"next-themes/dist/types\";\n\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\n\nexport const Providers: FC<ThemeProviderProps> = ({ children, ...props }) => {\n  return (\n    <NextThemesProvider {...props}>\n      <TooltipProvider>{children}</TooltipProvider>\n    </NextThemesProvider>\n  );\n};\n"],"names":[],"mappings":";;;;;;;AAAA;;;;AAQO,MAAM,YAAoC,CAAC,EAAE,QAAQ,EAAE,GAAG,OAAO;IACtE,qBACE,wPAAC,gJAAA,CAAA,gBAAkB;QAAE,GAAG,KAAK;kBAC3B,cAAA,wPAAC,mIAAA,CAAA,kBAAe;sBAAE;;;;;;;;;;;AAGxB"}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/context/context.tsx"],"sourcesContent":["import { Dispatch, SetStateAction, createContext } from \"react\";\n\nimport { ChatMessage, ChatItem, Folder, ChatMessagesListState } from \"@/types\";\n\ninterface ChatbotUIContext {\n  // ACTIVE CHAT STORE\n  isGenerating: boolean;\n  setIsGenerating: Dispatch<SetStateAction<boolean>>;\n  firstTokenReceived: boolean;\n  setFirstTokenReceived: Dispatch<SetStateAction<boolean>>;\n  abortController: AbortController | null;\n  setAbortController: Dispatch<SetStateAction<AbortController | null>>;\n\n  // PASSIVE CHAT STORE\n  // chatMessages: ChatMessage[];\n  // setChatMessages: Dispatch<SetStateAction<ChatMessage[]>>;\n\n  // PASSIVE CHAT STORE\n  userInput: string;\n  setUserInput: Dispatch<SetStateAction<string>>;\n\n  // ITEMS STORE\n  chatList: {\n    folders: Folder[];\n    chats: ChatItem[];\n  };\n  setChatList: Dispatch<\n    SetStateAction<{ folders: Folder[]; chats: ChatItem[] }>\n  >;\n\n  // CHAT MESSAGES LIST STORE\n  chatMessagesList: ChatMessagesListState;\n  setChatMessagesList: Dispatch<SetStateAction<ChatMessagesListState>>;\n}\n\nexport const ChatbotUIContext = createContext<ChatbotUIContext>({\n  // ACTIVE CHAT STORE\n  isGenerating: false,\n  setIsGenerating: () => {},\n  firstTokenReceived: false,\n  setFirstTokenReceived: () => {},\n  abortController: null,\n  setAbortController: () => {},\n\n  // PASSIVE CHAT STORE\n  // chatMessages: [],\n  // setChatMessages: () => {},\n  userInput: \"\",\n  setUserInput: () => {},\n\n  // ITEMS STORE\n  chatList: { folders: [], chats: [] },\n  setChatList: () => {},\n\n  // CHAT MESSAGES LIST STORE\n  chatMessagesList: {},\n  setChatMessagesList: () => {},\n});\n"],"names":[],"mappings":";;;;;;AAmCO,MAAM,iCAAmB,CAAA,GAAA,+MAAA,CAAA,gBAAa,AAAD,EAAoB;IAC9D,oBAAoB;IACpB,cAAc;IACd,iBAAiB,KAAO;IACxB,oBAAoB;IACpB,uBAAuB,KAAO;IAC9B,iBAAiB;IACjB,oBAAoB,KAAO;IAE3B,qBAAqB;IACrB,oBAAoB;IACpB,6BAA6B;IAC7B,WAAW;IACX,cAAc,KAAO;IAErB,cAAc;IACd,UAAU;QAAE,SAAS,EAAE;QAAE,OAAO,EAAE;IAAC;IACnC,aAAa,KAAO;IAEpB,2BAA2B;IAC3B,kBAAkB,CAAC;IACnB,qBAAqB,KAAO;AAC9B"}},
    {"offset": {"line": 359, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 364, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/utility/global-state.tsx"],"sourcesContent":["\"use client\";\n\nimport { FC, useState, useEffect } from \"react\";\nimport { ChatbotUIContext } from \"@/context/context\";\nimport { loadState, saveState } from \"@/lib/utils\";\nimport { ChatMessage, ChatItem, Folder, ChatMessagesListState } from \"@/types\";\n\ninterface GlobalStateProps {\n  children: React.ReactNode;\n}\n\nconst whitelist = [\"chatList\", \"chatMessagesList\"];\nconst blacklist = [\n  \"userInput\",\n  \"chatMessages\",\n  \"isGenerating\",\n  \"firstTokenReceived\",\n  \"abortController\",\n];\n\nexport const GlobalState: FC<GlobalStateProps> = ({ children }) => {\n  // Load persisted state on initial render\n  const persistedState = loadState();\n\n  // PASSIVE CHAT STORE\n  const [userInput, setUserInput] = useState<string>(\"\");\n\n  // ITEMS STORE\n  const [chatList, setChatList] = useState<{\n    folders: Folder[];\n    chats: ChatItem[];\n  }>(persistedState?.chatList || { folders: [], chats: [] });\n\n  // ACTIVE CHAT STORE\n  const [isGenerating, setIsGenerating] = useState<boolean>(false);\n  const [firstTokenReceived, setFirstTokenReceived] = useState<boolean>(false);\n  const [abortController, setAbortController] =\n    useState<AbortController | null>(null);\n\n  // CHAT MESSAGES LIST STORE\n  const [chatMessagesList, setChatMessagesList] =\n    useState<ChatMessagesListState>(persistedState?.chatMessagesList || {});\n\n  // Persist state whenever it changes\n  useEffect(() => {\n    const state = {\n      chatList,\n      userInput,\n      isGenerating,\n      abortController,\n      chatMessagesList,\n      firstTokenReceived,\n    };\n    saveState(state, whitelist, blacklist);\n  }, [\n    chatList,\n    userInput,\n    isGenerating,\n    abortController,\n    chatMessagesList,\n    firstTokenReceived,\n  ]);\n\n  return (\n    <ChatbotUIContext.Provider\n      value={{\n        // PASSIVE CHAT STORE\n        userInput,\n        setUserInput,\n\n        // ACTIVE CHAT STORE\n        isGenerating,\n        setIsGenerating,\n        firstTokenReceived,\n        setFirstTokenReceived,\n        abortController,\n        setAbortController,\n\n        // ITEMS STORE\n        chatList,\n        setChatList,\n\n        // CHAT MESSAGES LIST STORE\n        chatMessagesList,\n        setChatMessagesList,\n      }}\n    >\n      {children}\n    </ChatbotUIContext.Provider>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;AAAA;;;;;AAWA,MAAM,YAAY;IAAC;IAAY;CAAmB;AAClD,MAAM,YAAY;IAChB;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,cAAoC,CAAC,EAAE,QAAQ,EAAE;IAC5D,yCAAyC;IACzC,MAAM,iBAAiB,CAAA,GAAA,mHAAA,CAAA,YAAS,AAAD;IAE/B,qBAAqB;IACrB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD,EAAU;IAEnD,cAAc;IACd,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD,EAGpC,gBAAgB,YAAY;QAAE,SAAS,EAAE;QAAE,OAAO,EAAE;IAAC;IAExD,oBAAoB;IACpB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD,EAAW;IAC1D,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD,EAAW;IACtE,MAAM,CAAC,iBAAiB,mBAAmB,GACzC,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD,EAA0B;IAEnC,2BAA2B;IAC3B,MAAM,CAAC,kBAAkB,oBAAoB,GAC3C,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD,EAAyB,gBAAgB,oBAAoB,CAAC;IAEvE,oCAAoC;IACpC,CAAA,GAAA,+MAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,QAAQ;YACZ;YACA;YACA;YACA;YACA;YACA;QACF;QACA,CAAA,GAAA,mHAAA,CAAA,YAAS,AAAD,EAAE,OAAO,WAAW;IAC9B,GAAG;QACD;QACA;QACA;QACA;QACA;QACA;KACD;IAED,qBACE,wPAAC,0HAAA,CAAA,mBAAgB,CAAC,QAAQ;QACxB,OAAO;YACL,qBAAqB;YACrB;YACA;YAEA,oBAAoB;YACpB;YACA;YACA;YACA;YACA;YACA;YAEA,cAAc;YACd;YACA;YAEA,2BAA2B;YAC3B;YACA;QACF;kBAEC;;;;;;AAGP"}},
    {"offset": {"line": 449, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}